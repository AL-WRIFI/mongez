<?php
namespace App\Modules\{{ ModuleName }}\Resources;

use HZ\Illuminate\Mongez\Resources\JsonResourceManager;

class {{ ResourceName }} extends JsonResourceManager 
{
    /**
     * Data that must be returned
     * This type of data is supposed to be generic
     * if the key is not found, a null will be returned.
     * 
     * @const array
     */
    const DATA = [];

    /**
     * String Data
     * if the key is not found, an empty string '' will be returned.
     * 
     * @const array
     */
    const STRING_DATA = {{ string }};
    
    /**
     * Boolean Data
     * if the key is not found, a `false` value will be returned.
     * 
     * @const array
     */
    const BOOLEAN_DATA = {{ bool }};
    
    /**
     * Integer Data
     * if the key is not found, a `0` value will be returned.
     * 
     * @const array
     */
    const INTEGER_DATA = {{ int }};
    
    /**
     * Float Data
     * if the key is not found, a `0` value will be returned.
     * 
     * @const array
     */
    const FLOAT_DATA = {{ float }};
    
    /**
     * Set that columns that will be formatted as dates
     * it could be numeric array or associated array to set the date format for certain columns
     * 
     * if the key is not found, a null will be returned.
     * 
     * @const array
     */
    const DATES = {{ date }};
    
    /**
     * Data that has multiple values based on locale codes
     * Mostly this is used with mongodb driver
     * If the locale-code header is present in the request headers
     * then it will return the value based on the locale code
     * otherwise it will return the value itself instead
     *
     * if the key is not found, an empty string '' will be returned.
     *
     * @const array
     */
    const LOCALIZED = {{ locale }};
    
    /**
     * Data that has multiple values based on locale codes and is transformed using resource
     *
     * @example ['banner' => UploadResource::class]
     * @example ['banner' => [UploadResource::class, 'file']]
     * If the locale is not set, then it will be sent as an array of objects, each object has 
     * a localeCode and its text/file value will be sent to the resource to parse it
     * 
     * @const array
     */
    public const LOCALIZED_RESOURCE_DATA = [];

    /**
     * List of assets that will have a full url if available
     *
     * if the key is not found, an empty string '' will be returned.
     * @const array
     */
    const ASSETS = {{ assets }};

    /**
     * Data that will be returned as a resources
     * 
     * i.e [city => CityResource::class],
     * @const array
     */
    const RESOURCES = [];

    /**
     * Data that will be returned as a collection of resources
     * 
     * i.e [cities => CityResource::class],
     * @const array
     */
    const COLLECTABLE = [];
    
    /**
     * Object Data
     * if the key is not found, a `{}` value will be returned.
     * 
     * @const array
     */
    const OBJECT_DATA = [];
    
    /**
     * Data that should be returned if exists
     * 
     * If set to true, then all data that is not present in the resource's model will not be present in the response
     * @const array|true
     */
    public const WHEN_AVAILABLE = true;    
}